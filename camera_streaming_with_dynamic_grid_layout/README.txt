------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
README: Multi-Camera RTSP Streaming with Dynamic Grid Layout
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Overview:->

This Python program streams RTSP feeds from multiple cameras and displays them in a dynamic grid layout using GStreamer. The user specifies the number of rows and columns for the grid, and the program automatically positions the video streams based on the grid size. 
Camera details (username, password, IP address) are read from a CSV file.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Features:->

1. Dynamic Grid Layout:
       - Supports user-defined grid configurations (rows Ã— columns).
       - Automatically positions and sizes video streams within the grid.

2. CSV Integration:
       - Reads camera credentials and IP addresses from a CSV file.

3. Multi-Camera RTSP Streaming:
       - Streams video feeds from multiple RTSP cameras simultaneously.
       - Configured for NVIDIA hardware-accelerated decoding and rendering.

4. Error Handling:
       - Detects and reports GStreamer pipeline errors.
       - Handles missing cameras and invalid CSV input gracefully.
        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Usage Instructions:->

Prepare the CSV File:

- Create a CSV file named cameras.csv in the same directory as the script.
	The file should have the following structure:
	    username,password,ip_address
	    admin,pass123,192.168.1.10
	    admin,pass123,192.168.1.20
	    admin,pass123,192.168.1.30
	    admin,pass123,192.168.1.40

       1. username: RTSP username for camera authentication.
       2. password: RTSP password for camera authentication.
       3. ip_address: IP address of the RTSP camera.

- Run the Program:
    Execute the script:
	    $ python3 script_name.py
    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  

Input Grid Configuration:->

   -> When prompted, specify the number of rows and columns for the grid layout. For example:

        Enter the number of rows (n): 2
        Enter the number of columns (m): 2

   -> Stream Display:
        The program will display video streams in the specified grid layout.
        Each stream is positioned and resized to fit the grid.

   -> Stop the Program:
        Press Ctrl+C to terminate the program gracefully.
        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Code Structure:->

1. MultiCameraRTSPPlayer Class:
       -> Handles RTSP streaming for multiple cameras.
       -> Constructs a GStreamer pipeline for dynamic grid layout.
       -> Manages the GStreamer pipeline and handles errors.

2. build_pipeline Method:
       -> Dynamically builds the GStreamer pipeline string based on the number of cameras and grid layout.
       -> Configures video positioning and sizing for each grid cell.

3. on_message Method:
       -> Handles GStreamer bus messages such as errors and end-of-stream events.

4. read_camera_from_csv Function:
       -> Reads camera details from a CSV file.
       -> Returns a list of tuples containing camera credentials and IP addresses.

5. Main Function:
       -> Reads camera details from the CSV file.
       -> Prompts the user for grid dimensions (rows Ã— columns).
       -> Starts streaming the RTSP feeds using MultiCameraRTSPPlayer.
        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Customizations:->

1. Change Video Decoding Format:
        The current pipeline supports H.265 streams. To support other formats (e.g., H.264), modify the pipeline in the build_pipeline method:

        rtph264depay ! h264parse ! nvv4l2decoder

2. Adjust Grid Cell Size:
        Modify the xpos, ypos, width, and height parameters in the build_pipeline method to change the positioning and size of the video streams.

3. Error Logging:
        Extend the on_message method to log errors to a file for debugging.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Example CSV File:->

username,password,ip_address
admin,pass123,192.168.1.10
admin,pass123,192.168.1.20
admin,pass123,192.168.1.30
admin,pass123,192.168.1.40

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Error Handling:->

1. Missing or Invalid CSV File:
        If the cameras.csv file is missing or malformed, the program will output:
	    $ Error reading CSV file: [Error details]

2. Insufficient Cameras for Grid Layout:
	If there are fewer cameras than the grid size:
	    $ Warning: Only [available cameras] cameras available, but [needed cameras] are needed.

3. RTSP Stream Issues:
	If an RTSP stream fails to connect, the error will be displayed:
	    $ Error: [Error message], Debug info: [Debug details]

4. End-of-Stream (EOS):
	If a camera stream ends, the program stops gracefully:
	    $ End-of-stream (EOS) received. Shutting down...

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Example Output:->

Enter the number of rows (n): 2
Enter the number of columns (m): 2

Starting stream for 4 cameras in a 2x2 grid...
Pipeline: rtspsrc location="rtsp://admin:pass123@192.168.1.10" latency=200 ! ...
Pipeline started, playing the RTSP streams...

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
################################################################################################################################################################################################################################################################################################
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

